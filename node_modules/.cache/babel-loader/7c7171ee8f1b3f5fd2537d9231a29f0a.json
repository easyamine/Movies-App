{"ast":null,"code":"var _jsxFileName = \"D:\\\\C\\\\Desktop\\\\GoMyCodeFile\\\\ReactJs\\\\firt-app\\\\src\\\\Component\\\\SearchBar\\\\SearchBar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport ReactBarStyle from \"./SearchBar.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SearchBar(props) {\n  _s();\n\n  const [SearchValue, SetSearchValue] = useState(\"\");\n\n  function Changer(event) {\n    SetSearchValue(event.target.value);\n  }\n\n  function ClearButton(event) {\n    SetSearchValue(\" \");\n  }\n\n  const ShouldDisplayClear = SearchValue.length > 0;\n  const ShowMovies = props.List.filter(Movie => {\n    return Movie.includes(SearchValue);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: SearchValue,\n      onChange: Changer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), ShouldDisplayClear && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: ClearButton,\n      children: \"Clear\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 36\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: ShowMovies.map(Movie => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: Movie\n        }, Movie, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 28\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SearchBar, \"MwXBHqnRASovwOPeD3TZz7h3Cao=\");\n\n_c = SearchBar;\nexport default SearchBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"sources":["D:/C/Desktop/GoMyCodeFile/ReactJs/firt-app/src/Component/SearchBar/SearchBar.js"],"names":["React","useState","useEffect","ReactBarStyle","SearchBar","props","SearchValue","SetSearchValue","Changer","event","target","value","ClearButton","ShouldDisplayClear","length","ShowMovies","List","filter","Movie","includes","map"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;;AAGA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA;;AAC1B,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,EAAD,CAA9C;;AAEA,WAASO,OAAT,CAAiBC,KAAjB,EAAwB;AACpBF,IAAAA,cAAc,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd;AACH;;AACD,WAASC,WAAT,CAAqBH,KAArB,EAA4B;AACxBF,IAAAA,cAAc,CAAC,GAAD,CAAd;AACH;;AAED,QAAMM,kBAAkB,GAAGP,WAAW,CAACQ,MAAZ,GAAqB,CAAhD;AAEA,QAAMC,UAAU,GAAGV,KAAK,CAACW,IAAN,CAAWC,MAAX,CAAmBC,KAAD,IAAW;AAC5C,WAAOA,KAAK,CAAEC,QAAP,CAAgBb,WAAhB,CAAP;AACH,GAFkB,CAAnB;AAGI,sBAEI;AAAA,4BACI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,KAAK,EAAEA,WAA1B;AAAuC,MAAA,QAAQ,EAAEE;AAAjD;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKK,kBAAkB,iBAAI;AAAQ,MAAA,OAAO,EAAED,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAF3B,eAGI;AAAA,gBACKG,UAAU,CAACK,GAAX,CAAgBF,KAAD,IAAW;AACvB,4BAAO;AAAA,oBAAiBA;AAAjB,WAASA,KAAT;AAAA;AAAA;AAAA;AAAA,gBAAP;AACH,OAFA;AADL;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AAYH;;GA3BQd,S;;KAAAA,S;AA6BT,eAAeA,SAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport ReactBarStyle from \"./SearchBar.css\"\r\n\r\n\r\nfunction SearchBar(props) {\r\nconst [SearchValue, SetSearchValue] = useState(\"\")\r\n\r\nfunction Changer(event) {\r\n    SetSearchValue(event.target.value)\r\n}\r\nfunction ClearButton(event) {\r\n    SetSearchValue(\" \")\r\n}\r\n\r\nconst ShouldDisplayClear = SearchValue.length > 0;\r\n\r\nconst ShowMovies = props.List.filter((Movie) => {\r\n    return Movie .includes(SearchValue)\r\n})\r\n    return (\r\n\r\n        <div>\r\n            <input type=\"text\" value={SearchValue} onChange={Changer}></input>\r\n            {ShouldDisplayClear && <button onClick={ClearButton}>Clear</button>}\r\n            <ul>\r\n                {ShowMovies.map((Movie) => {\r\n                    return <li key={Movie}>{Movie}</li>\r\n                })}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBar;"]},"metadata":{},"sourceType":"module"}